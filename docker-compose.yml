version: '3.7'

services:

  zookeeper:
      image: zookeeper:3.7.0
      container_name: zookeeper
      restart: "no"
      ports:
        - "2181:2181"
      environment:
        ZOOKEEPER_CLIENT_PORT: 2181
        ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: obsidiandynamics/kafka
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: DOCKER_INTERNAL:PLAINTEXT,DOCKER_EXTERNAL:PLAINTEXT
      KAFKA_LISTENERS: DOCKER_INTERNAL://:29092,DOCKER_EXTERNAL://:9092
      KAFKA_ADVERTISED_LISTENERS: DOCKER_INTERNAL://kafka:29092,DOCKER_EXTERNAL://:${DOKER_HOST_IP:-127.0.0.1}:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: DOCKER_INTERNAL
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_BROKER_ID: 1 
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    depends_on:
      - zookeeper


  db:
    image: mcr.microsoft.com/mssql/server:2019-latest
    environment:
      SA_PASSWORD: "Nour@123"
      ACCEPT_EULA: "Y"
      MSSQL_PID: "Express"
      MSSQL_TCP_PORT: "1433"
    ports:
      - "1433:1433"

  StudentAPI:
    image: studentapi
    build:
      context: ./Service1/StudentAPI
      dockerfile: Dockerfile
    ports:
      - "5000:80"
    depends_on:
      - db
    

  AdminAPI:
    image: adminapi
    build:
      context: ./Service2/AdminAPI
      dockerfile: Dockerfile
    ports:
      - "5001:80"
    
      

 